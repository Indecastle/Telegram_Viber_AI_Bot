name: Continuous Integration and Deployment

on:
  push:
    branches:
      - deploy
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Check out mode
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build App
        run: dotnet build -c Release --no-restore

      - name: Run automated tests
        run: dotnet test -c Release --no-build

  deploy:
    needs: build
    if: needs.build.result == 'success'
    runs-on: self-hosted

    strategy:
      matrix:
        dotnet-version: ["7.0.x"]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build App
        run: dotnet build -c Release --no-restore

      - name: Apply Migrations
        run: dotnet run --project ./Telegram_AI_Bot.Migrations/Telegram_AI_Bot.Migrations.csproj -- migrate

      # We will output publish files to the folder we previously created
      - name: Publish
        run: dotnet publish ./Telegram_AI_Bot.Api/Telegram_AI_Bot.Api.csproj -c Release -o /home/ubuntu/actions-runner/.run-apps/Telegram_AI_Bot.Api

      - name: Restart the app
        run: |
          export XDG_RUNTIME_DIR=/run/user/$(id -u)
          systemctl --user restart telegram_ai-app.service
